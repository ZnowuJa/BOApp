@using System.Globalization
@using Microsoft.FluentUI.AspNetCore.Components.Extensions

<FluentGridItem class=fluent-grid-item>
    <div class="form-group">
        <FluentDatePicker Label="@Label"
            Value="@SelectedDate.ToDateTimeNullable()"
            ValueChanged="@(e => OnDateChanged(e.ToDateOnlyNullable()))"
            Disabled="Disabled"
            Style="width: 130px" />
        <FluentTimePicker Value="@SelectedTime.ToDateTimeNullable()"
            ValueChanged="@(e => OnTimeChanged(e.ToTimeOnlyNullable()))"
            Style="width: 90px"
            Disabled="Disabled" />
    </div>
</FluentGridItem>


@code {
    [Parameter] public string Label { get; set; }
    [Parameter] public DateTime? DateTimeValue { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public EventCallback<DateTime?> DateTimeValueChanged { get; set; }


    private DateOnly? SelectedDate => DateTimeValue.HasValue ? DateOnly.FromDateTime(DateTimeValue.Value) : (DateOnly?)null;
    private TimeOnly? SelectedTime => DateTimeValue.HasValue ? TimeOnly.FromDateTime(DateTimeValue.Value) : (TimeOnly?)null;

    private void OnDateChanged(DateOnly? date)
    {
        UpdateDateTime(date, SelectedTime);
    }

    private void OnTimeChanged(TimeOnly? time)
    {
        UpdateDateTime(SelectedDate, time);
    }

    private void UpdateDateTime(DateOnly? date, TimeOnly? time)
    {
        DateTime? newDateTime = CombineDateAndTime(date, time);
        DateTimeValueChanged.InvokeAsync(newDateTime);
    }

    private DateTime? CombineDateAndTime(DateOnly? date, TimeOnly? time)
    {
        if (!time.HasValue)
        {
            var currentTime = TimeOnly.FromDateTime(DateTime.Now);
            var timeToUse = time.HasValue ? time.Value : currentTime;
            return date.Value.ToDateTime(timeToUse);
        }
        if (date.HasValue && time.HasValue)
        {
            return date.Value.ToDateTime(time.Value);
        }
        return null;
    }
}

<style>
    .fluent-grid-item {
        display: flex;
        flex-direction: row;
        gap: 10px; /* Adjust the gap between date and time pickers */
    }
</style>