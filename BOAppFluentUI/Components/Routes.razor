@* <Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
</Router> *@
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(Layout.MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>


@*  <CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(Layout.MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

<ErrorBoundary @ref="errorBoundary" OnError="@HandleError">
    <ChildContent>
        <Router AppAssembly="@typeof(Program).Assembly" />
    </ChildContent>
</ErrorBoundary> *@


@* <ErrorBoundary @ref="errorBoundary" OnError="@HandleError">
    <ChildContent>
        <CascadingAuthenticationState>
            <Router AppAssembly="@typeof(Program).Assembly">
                <Found Context="routeData">
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(Layout.MainLayout)">
                        <p>Sorry, there's nothing at this address.</p>
                    </LayoutView>
                </NotFound>
            </Router>
        </CascadingAuthenticationState>
    </ChildContent>
</ErrorBoundary> *@


@code {
    private ErrorBoundary? errorBoundary;

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;

    private void HandleError(Exception exception)
    {
        // Optional: log error here
        NavigationManager.NavigateTo("/Error", true);
    }
}
